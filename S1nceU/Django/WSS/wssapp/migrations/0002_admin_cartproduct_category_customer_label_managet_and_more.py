# Generated by Django 4.1.2 on 2022-12-01 14:48

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('wssapp', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=255)),
                ('account', models.CharField(max_length=255)),
                ('password', models.CharField(max_length=255)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('user_status', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'admin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CartProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cart_product',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('user_id_c', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=255)),
                ('account', models.CharField(max_length=255, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255, unique=True)),
                ('address', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=255)),
                ('id_number', models.CharField(max_length=10, unique=True)),
                ('user_status', models.TextField()),
            ],
            options={
                'db_table': 'customer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('label_id', models.AutoField(primary_key=True, serialize=False)),
                ('label', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'label',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ManageT',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'manage_t',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('order_id', models.AutoField(primary_key=True, serialize=False)),
                ('total_price', models.FloatField()),
                ('order_time', models.DateTimeField()),
                ('address', models.CharField(max_length=255)),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'order',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrderProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'order_product',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('product_id', models.IntegerField(primary_key=True, serialize=False)),
                ('product_name', models.CharField(max_length=255)),
                ('price', models.IntegerField()),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('publish_date', models.DateTimeField()),
                ('status', models.TextField()),
                ('total_amount', models.IntegerField()),
            ],
            options={
                'db_table': 'product',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SalesReport',
            fields=[
                ('report_id', models.AutoField(primary_key=True, serialize=False)),
                ('sales_results', models.CharField(max_length=255)),
                ('sales_score', models.IntegerField()),
            ],
            options={
                'db_table': 'sales_report',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('ticket_id', models.AutoField(primary_key=True, serialize=False)),
                ('effective_date', models.DateTimeField()),
                ('amount', models.CharField(max_length=255)),
                ('discount', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'ticket',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ToDoThing',
            fields=[
                ('event_id', models.AutoField(primary_key=True, serialize=False)),
                ('event_content', models.CharField(blank=True, max_length=255, null=True)),
                ('event_state', models.TextField()),
            ],
            options={
                'db_table': 'to_do_thing',
                'managed': False,
            },
        ),
        migrations.AlterModelOptions(
            name='seller',
            options={'managed': False},
        ),
    ]
